<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- @PreAuthorize("hasRole('ROLE_USER')") ile controller nesnelerinde authentication saglanmaktadÄ±r -->
	<!-- <security:global-method-security pre-post-annotations="enabled" /> -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<context:component-scan base-package="com.example.springwebtemplate"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<beans:bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<beans:property name="mediaTypes">
			<beans:map>
				<beans:entry key="html" value="text/html" />
				<beans:entry key="json" value="application/json" />
			</beans:map>
		</beans:property>
		<beans:property name="viewResolvers">
			<beans:list>
				<beans:bean
					class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<beans:property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView" />
					<beans:property name="prefix" value="/WEB-INF/views/" />
					<beans:property name="suffix" value=".jsp" />
				</beans:bean>
			</beans:list>
		</beans:property>
		<beans:property name="defaultViews">
			<beans:list>
				<beans:bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
					<beans:property name="prefixJson" value="false" />
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<beans:property name="defaultLocale" value="tr" />
	</beans:bean>
	
	<beans:bean id="localeChangeInterceptor"
		class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<beans:property name="paramName" value="language" />
	</beans:bean>

	<beans:bean
		class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
		<beans:property name="interceptors">
			<beans:list>
				<beans:ref bean="localeChangeInterceptor" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Register the locale.properties -->
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basename" value="locale" />
	</beans:bean>
	
	<beans:bean id="placeholderConfigMM" class="com.example.springwebtemplate.util.SpringPropertiesUtil">
	    <beans:property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
	    <beans:property name="locations">
	    <beans:list>
	        <beans:value>classpath:configuration.properties</beans:value>
	    </beans:list>
	    </beans:property>
	</beans:bean>
	
	<beans:bean id="runMeTask" class="com.example.springwebtemplate.util.schedule.RunMeTask" />
	
	<!-- Spring Quartz -->
	<beans:bean name="runMeJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<beans:property name="jobClass" value="com.example.springwebtemplate.util.schedule.RunMeJob" />
		<beans:property name="jobDataAsMap">
			<beans:map>
				<beans:entry key="runMeTask" value-ref="runMeTask" />
			</beans:map>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="timeZone" class="java.util.TimeZone" factory-method="getTimeZone">
	    <beans:constructor-arg value="Europe/Istanbul" />
	</beans:bean>
	
	<!-- Cron Trigger, fire at everyday 4:00 am -->
	<beans:bean id="cronTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerBean">
		<beans:property name="jobDetail" ref="runMeJob" />
		<!-- Example Cron Trigger, run everyday 5 seconds-->
		<!--<beans:property name="cronExpression" value="0/5 * * * * ?" /> -->
		<beans:property name="cronExpression" value="0 0 4 * * ? *" />
		<beans:property name="timeZone" ref="timeZone" />
	</beans:bean>
	
	<beans:bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<beans:property name="jobDetails">
		   <beans:list>
		      <beans:ref bean="runMeJob" />
		   </beans:list>
		</beans:property>
		<beans:property name="triggers">
		    <beans:list>
			<beans:ref bean="cronTrigger" />
		    </beans:list>
		</beans:property>
   </beans:bean>
</beans:beans>
